@page "/viloes"
@using Data
@using System.Text.Json
@using System.Text.Json.Serialization
@using System.Text;
@using System.Security.Cryptography;

<PageTitle>Vilões</PageTitle>

<h1>Vilões</h1>

@if (carregando)
{
    <div class="spinner"></div>
}
else
{
    if (retornouRegistro)
    {
        <div class="card">
            <img src="@caminhoImagem" alt="Avatar" style="width:100%">
            <div class="container">
                <h4><b>@vilao.Data?.Results?.FirstOrDefault()?.Name</b></h4>
                <p>@vilao.Data?.Results?.FirstOrDefault()?.Description</p>
            </div>
        </div>
    }
    else
    {
        <div class="card">
            <img src="image\notFound.jpg" alt="Avatar" style="width:100%">
            <div class="container">
                <h4><b>Registro não localizado</b></h4>
                <p>Verifique seu código, pois algo não está certo.</p>
            </div>
        </div>
    }

    <br />

    <button class="btn btn-primary" @onclick="Thanos">Thanos</button>
    <button class="btn btn-primary" @onclick="Ultron">Ultron</button>
    <button class="btn btn-primary" @onclick="Mordo">Mordo</button>
}

@code {
    private Personagem vilao = new Personagem();
    private bool carregando = false;
    private bool retornouRegistro = true;
    private string caminhoImagem;
    private async Task ProximoVilao(string nomeVilao)
    {
        carregando = true;
        retornouRegistro = true;
        var ts = DateTime.Now.Ticks.ToString(); //número de tiques que representam a data e hora dessa instância
                                                //Um único tique representa cem nanossegundos ou um décimo milionésimo de segundo. 
                                                // Há 10.000 tiques em milissegundos (veja TicksPerMillisecond) e 
                                                // 10 milhões de tiques em um segundo.
        var publicKey = "2266bfd7436eae54f5ef51529af3f659";
        var privateKey = "4d9cb4a5758f2c898c09a29a788c3f80e15c4c2a";
        
        if (vilao.Data == null || vilao.Data?.Results?.Count == 0)
            retornouRegistro = false;

        carregando = false;
    }

    private async Task Thanos()
    {
        
    }

    private async Task Ultron()
    {
        
    }

    private async Task Mordo()
    {
        await ProximoVilao("Baron Mordo (Karl Mordo)");
    }

    protected override async Task OnInitializedAsync()
    {
        await ProximoVilao("thanos");
    }    
}